# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def parse_KV_file(file, separator='=')
  file_abs_path = File.expand_path(file)
  if !File.exists? file_abs_path
    return [];
  end
  generated = Hash.new
  File.foreach(file_abs_path) do |line|
    key_value = line.split(separator)
    if key_value.length == 2
      generated[key_value[0].strip()] = key_value[1].strip()
    end
  end
  return generated
end

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('.', 'Flutter', 'Generated.xcconfig'))
  if !File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  generated_xcode_build_settings = parse_KV_file(generated_xcode_build_settings_path)
  if !generated_xcode_build_settings.has_key?('FLUTTER_ROOT')
    raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting #{generated_xcode_build_settings_path} and re-run flutter pub get"
  end
  return generated_xcode_build_settings['FLUTTER_ROOT']
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
